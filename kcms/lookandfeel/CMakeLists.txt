# KI18N Translation Domain for this library
add_definitions(-DTRANSLATION_DOMAIN=\"kcm_lookandfeel\")

if(X11_Xcursor_FOUND)
    set(HAVE_XCURSOR TRUE)
endif()

if(${Breeze_FOUND})
    if(${BREEZE_WITH_KDECORATION})
        set(HAVE_BREEZE_DECO true)
    else()
        set(HAVE_BREEZE_DECO FALSE)
    endif()
else()
    set(HAVE_BREEZE_DECO FALSE)
endif()

configure_file (config-kcm.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-kcm.h )

set(kcm_lookandfeel_SRCS
    kcmmain.cpp
    kcm.cpp
    ../kcms-common_p.h
    ../krdb/krdb.cpp
)

if (X11_Xcursor_FOUND)
    set(kcm_lookandfeel_SRCS
        ${kcm_lookandfeel_SRCS}
        ../cursortheme/xcursor/cursortheme.cpp
        ../cursortheme/xcursor/xcursortheme.cpp
    )
endif ()

kcmutils_generate_module_data(
    kcm_lookandfeel_SRCS
    MODULE_DATA_HEADER lookandfeeldata.h
    MODULE_DATA_CLASS_NAME LookAndFeelData
    SETTINGS_HEADERS lookandfeelsettings.h
    SETTINGS_CLASSES LookAndFeelSettings
)

kconfig_add_kcfg_files(kcm_lookandfeel_SRCS lookandfeelsettings.kcfgc GENERATE_MOC)

add_library(kcm_lookandfeel MODULE ${kcm_lookandfeel_SRCS})

target_link_libraries(kcm_lookandfeel
  KF5::KIOWidgets
  KF5::CoreAddons
  KF5::GuiAddons
  KF5::KCMUtils
  KF5::I18n
  KF5::IconThemes
  KF5::Plasma
  KF5::PlasmaQuick
  KF5::Declarative
  KF5::QuickAddons
  PW::KWorkspace

  Qt::DBus
  Qt::Widgets
  Qt::QuickWidgets
  X11::X11
)

if(X11_FOUND)
    target_link_libraries(kcm_lookandfeel Qt::X11Extras)
endif()
if (X11_Xcursor_FOUND)
   target_link_libraries(kcm_lookandfeel X11::Xcursor)
endif ()
if (X11_Xfixes_FOUND)
   target_link_libraries(kcm_lookandfeel X11::Xfixes)
endif ()

kcoreaddons_desktop_to_json(kcm_lookandfeel "kcm_lookandfeel.desktop" SERVICE_TYPES kcmodule.desktop)

#this desktop file is installed only for retrocompatibility with sycoca
install(FILES lookandfeelsettings.kcfg DESTINATION ${KDE_INSTALL_KCFGDIR})
install(FILES kcm_lookandfeel.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
install(TARGETS kcm_lookandfeel DESTINATION ${KDE_INSTALL_PLUGINDIR}/kcms)
install(FILES lookandfeel.knsrc DESTINATION ${KDE_INSTALL_KNSRCDIR})

if(BUILD_TESTING)
   find_package(Qt5Test ${QT_MIN_VERSION} CONFIG REQUIRED)
   add_subdirectory(autotests)
endif()

kpackage_install_package(package kcm_lookandfeel kcms)

###### Command line tool

set(plasma-apply-lookandfeel_SRCS
    lnftool.cpp
    # TODO: load kcm plugin instead of using code copy
    kcm.cpp
    lookandfeeldata.cpp
    ../kcms-common_p.h
    ../krdb/krdb.cpp
)

if (X11_Xcursor_FOUND)
    set(plasma-apply-lookandfeel_SRCS
        ${plasma-apply-lookandfeel_SRCS}
        ../cursortheme/xcursor/cursortheme.cpp
        ../cursortheme/xcursor/xcursortheme.cpp
    )
endif ()

kconfig_add_kcfg_files(plasma-apply-lookandfeel_SRCS lookandfeelsettings.kcfgc GENERATE_MOC)

add_executable(plasma-apply-lookandfeel ${plasma-apply-lookandfeel_SRCS})

target_link_libraries(plasma-apply-lookandfeel
  KF5::KIOWidgets
  KF5::CoreAddons
  KF5::KCMUtils
  KF5::I18n
  KF5::IconThemes
  #TODO:kpackage
  KF5::Plasma
  KF5::PlasmaQuick
  KF5::Declarative
  KF5::QuickAddons
  KF5::NewStuff
  PW::KWorkspace

  Qt::DBus
  Qt::Widgets
  Qt::QuickWidgets
)

if(X11_FOUND)
    target_link_libraries(plasma-apply-lookandfeel X11::X11 Qt::X11Extras)
endif()
if (X11_Xcursor_FOUND)
   target_link_libraries(plasma-apply-lookandfeel X11::Xcursor)
endif ()
if (X11_Xfixes_FOUND)
   target_link_libraries(plasma-apply-lookandfeel X11::Xfixes)
endif ()

ADD_CUSTOM_TARGET(plasma-apply-lookandfeel_link ALL
                  COMMAND ${CMAKE_COMMAND} -E create_symlink ${KDE_INSTALL_FULL_BINDIR}/plasma-apply-lookandfeel ${CMAKE_CURRENT_BINARY_DIR}/lookandfeeltool)
install( FILES ${CMAKE_CURRENT_BINARY_DIR}/lookandfeeltool DESTINATION ${KDE_INSTALL_FULL_BINDIR}/ )
install( TARGETS plasma-apply-lookandfeel ${KDE_INSTALL_TARGETS_DEFAULT_ARGS} )
